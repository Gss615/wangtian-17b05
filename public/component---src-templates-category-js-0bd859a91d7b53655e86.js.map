{"version":3,"file":"component---src-templates-category-js-0bd859a91d7b53655e86.js","mappings":"mRAiBqBA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA4BhB,OA5BgBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACjBC,OAAA,WAAU,IAAD,OACDC,GAAaC,EAAAA,EAAAA,IAAQC,KAAKC,MAAMC,YAAYC,MAAO,UACvD,OACI,gBAAC,KAAWH,KAAKC,MACjB,wBAAMG,UAAW,WAAa,IAAMN,EAAY,6BAA8B,MAAS,IAAM,IAAMA,EAAY,6BAA8B,MAAS,KACjJ,IAAM,IAAMA,EAAY,uBAAwB,OAAO,SAACO,EAASC,GAAV,MAClB,kBAAjC,IAAMD,EAAS,OAAQ,OAChBE,EAAY,IAAa,IAAY,IAAMF,EAAS,OAAQ,QAC5DG,EAAYC,EAAAA,GAAWF,GAEvB,gBAACC,EAAD,eAAWE,IAAKJ,GAAiB,EAAKL,MAAtC,CAA6CI,QAASA,EAASM,KAAM,EAAKV,MAAMC,YAAaU,aAAc,IAAM,EAAKX,MAAO,kBAAmB,MAAOY,KAAM,EAAKZ,MAAMC,YAAYW,SAEnL,WACL,IAAIN,EAAY,IAAa,IAAY,IAAMF,EAAS,OAAQ,QAChDI,EAAAA,GAAWF,GAC3B,OAAS,WACL,IAAIA,EAAY,IAAa,IAAY,IAAMF,EAAS,OAAQ,QAC5DG,EAAYC,EAAAA,GAAWF,GAC3B,OACI,gBAACC,EAAD,eAAWE,IAAKJ,GAAiB,EAAKL,MAAtC,CAA6CI,QAASA,EAASM,KAAM,EAAKV,MAAMC,YAAaU,aAAc,IAAM,EAAKX,MAAO,kBAAmB,MAAOY,KAAM,EAAKZ,MAAMC,YAAYW,QAJnL,GAHJ,GAN8C,IAC/CN,EACAC,QAmBvB,EA5BgBZ,CAAiBkB,EAAAA","sources":["webpack://planty/./src/templates/category.js"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport components, {Layout} from '../components/index';\nimport {getPage} from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Category extends React.Component {\n    render() {\n        let store_page = getPage(this.props.pageContext.pages, '/store');\n        return (\n            <Layout {...this.props}>\n            <main className={'content' + (_.get(store_page, 'frontmatter.page_css_class', null) ? (' ' + _.get(store_page, 'frontmatter.page_css_class', null)) : '')}>\n                {_.map(_.get(store_page, 'frontmatter.sections', null), (section, section_idx) => (\n                    (_.get(section, 'type', null) === 'store_section') ? ((() => {\n                        let component = _.upperFirst(_.camelCase(_.get(section, 'type', null)));\n                        let Component = components[component];\n                        return (\n                            <Component key={section_idx} {...this.props} section={section} page={this.props.pageContext} category_url={_.get(this.props, 'pageContext.url', null)} site={this.props.pageContext.site} />\n                        );\n                    })()) : (() => {\n                        let component = _.upperFirst(_.camelCase(_.get(section, 'type', null)));\n                        let Component = components[component];\n                        return ((() => {\n                            let component = _.upperFirst(_.camelCase(_.get(section, 'type', null)));\n                            let Component = components[component];\n                            return (\n                                <Component key={section_idx} {...this.props} section={section} page={this.props.pageContext} category_url={_.get(this.props, 'pageContext.url', null)} site={this.props.pageContext.site} />\n                            );\n                        })());\n                    })()\n                ))}\n            </main>\n            </Layout>\n        );\n    }\n}\n"],"names":["Category","render","store_page","getPage","this","props","pageContext","pages","className","section","section_idx","component","Component","components","key","page","category_url","site","React"],"sourceRoot":""}